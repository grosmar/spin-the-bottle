// Generated by Haxe 3.4.3
(function () { "use strict";
var hxmath_math_IntVector2Default = function() { };
var hxmath_math_Vector2Default = function(x,y) {
	this.x = x;
	this.y = y;
};
var spinthebottle_Bottle = function(canvas) {
	this.spinning = false;
	this.rotation = .0;
	this.rSpeed = .0;
	this.targetRotation = .0;
	var _gthis = this;
	this.canvas = canvas;
	this.ctx = this.canvas.getContext("2d",null);
	canvas.width = window.innerHeight;
	canvas.height = window.innerHeight;
	this.img = new Image();
	this.img.onload = function() {
		var imgWidth = _gthis.img.naturalWidth / _gthis.img.naturalHeight * canvas.height;
		_gthis.ctx.drawImage(_gthis.img,(canvas.width - imgWidth) / 2,0,imgWidth,canvas.height);
	};
	this.img.src = "img/bottle_small.png";
	this.canvas.addEventListener("touchstart",$bind(this,this.touchGrab));
	this.canvas.addEventListener("mousedown",$bind(this,this.mouseGrab));
	window.requestAnimationFrame($bind(this,this.render));
};
spinthebottle_Bottle.center = function(e) {
	var rect = e.getBoundingClientRect();
	var this1 = new hxmath_math_Vector2Default((rect.left + rect.right) / 2,(rect.top + rect.bottom) / 2);
	return this1;
};
spinthebottle_Bottle.halt = function(e) {
	e.preventDefault();
	e.stopImmediatePropagation();
};
spinthebottle_Bottle.prototype = {
	setTarget: function(pt,center,offset) {
		var angle = this.angle(pt,center) - offset;
		this.targetRotation = angle + Math.round((this.targetRotation - angle) / (2 * Math.PI)) * 2 * Math.PI;
		this.pursueTarget();
	}
	,angle: function(pt,center) {
		var self = pt;
		var this1 = new hxmath_math_Vector2Default(self.x,self.y);
		var self1 = this1;
		self1.x -= center.x;
		self1.y -= center.y;
		var self2 = self1;
		return Math.atan2(self2.y,self2.x);
	}
	,grab: function(options) {
		var _gthis = this;
		spinthebottle_Bottle.halt(options.start);
		this.rSpeed = 0;
		var e = options.start.target;
		var center = spinthebottle_Bottle.center(e);
		var offset = this.angle(options.pos(options.start),center) - this.rotation;
		var onMove = function(e1) {
			var onMove1 = options.pos(e1);
			_gthis.setTarget(onMove1,center,offset);
		};
		e.ownerDocument.addEventListener(options.move,onMove);
		var onRelease = null;
		onRelease = function() {
			e.ownerDocument.removeEventListener(options.move,onMove);
			e.ownerDocument.removeEventListener(options.release,onRelease);
			_gthis.release();
		};
		var onRelease1 = onRelease;
		e.ownerDocument.addEventListener(options.release,onRelease);
	}
	,mouseGrab: function(e) {
		this.grab({ start : e, move : "mousemove", release : "mouseup", pos : function(e1) {
			var this1 = new hxmath_math_Vector2Default(e1.clientX,e1.clientY);
			return this1;
		}});
	}
	,touchGrab: function(e) {
		this.grab({ start : e, move : "touchmove", release : "touchend", pos : function(e1) {
			var this1 = new hxmath_math_Vector2Default(e1.touches[0].clientX,e1.touches[0].clientY);
			return this1;
		}});
	}
	,release: function() {
		if(!this.spinning) {
			this.rSpeed = this.targetRotation - this.rotation;
			this.spinning = Math.abs(this.rSpeed) > .25;
		}
	}
	,pursueTarget: function() {
		this.rotation = Math.abs(this.rotation - this.targetRotation) < .001 ? this.targetRotation : this.targetRotation * .1 + this.rotation * 0.9;
	}
	,render: function(_) {
		if(this.spinning) {
			this.rotation += this.rSpeed;
			this.targetRotation = this.rotation;
			this.rSpeed *= .99;
			if(Math.abs(this.rSpeed) < .001) {
				this.spinning = false;
			} else {
				this.rSpeed += (this.rSpeed > 0 ? -1 : 1) * .001;
			}
		} else {
			this.rotation = Math.abs(this.rotation - this.targetRotation) < .001 ? this.targetRotation : this.targetRotation * .1 + this.rotation * 0.9;
		}
		var iw = this.img.naturalWidth / this.img.naturalHeight * this.canvas.height;
		var ih = this.canvas.height;
		this.ctx.save();
		this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);
		this.ctx.translate(this.canvas.width / 2,this.canvas.height / 2);
		this.ctx.rotate(this.rotation);
		this.ctx.translate(-(this.canvas.width / 2),-(this.canvas.height / 2));
		this.ctx.drawImage(this.img,this.canvas.width / 2 - iw / 2,this.canvas.height / 2 - ih / 2,iw,ih);
		this.ctx.restore();
		window.requestAnimationFrame($bind(this,this.render));
	}
};
var spinthebottle_Main = function() { };
spinthebottle_Main.main = function() {
	window.document.body.innerHTML = "\r\n\t\t<div id=\"root\" class=\"container\">\r\n\t\t\t<div class=\"square\" id=\"squareContainer\">\r\n\t\t\t\t<!--<div id=\"bottle\"></div>-->\r\n\t\t\t\t<canvas id=\"canvas\" ></canvas>\r\n\t\t\t</div>\r\n\t\t</div>";
	new spinthebottle_Bottle(window.document.getElementById("canvas"));
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
spinthebottle_Main.main();
})();
